--------------------
./configure --host=arm CFLAGS= LDFLAGS=
2015年 07月 28日 星期二 20:19:13 CST
unknown option: --host=arm
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure CFLAGS= LDFLAGS=
2015年 07月 28日 星期二 20:19:28 CST
unknown option: CFLAGS=
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:19:46 CST
=== ztest22070.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest22070.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22070.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest22070.c

Checking for shared library support...
=== ztest22070.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest22070.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22070.so ztest22070.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest22070.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22070.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22070.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22070 ztest22070.c
Checking for strerror... Yes.

=== ztest22070.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22070.c
Checking for unistd.h... Yes.

=== ztest22070.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22070.c
Checking for stdarg.h... Yes.

=== ztest22070.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22070.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22070.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22070 ztest22070.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22070.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22070.c
Checking for return value of vsnprintf()... Yes.

=== ztest22070.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22070.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:21:12 CST
=== ztest26263.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest26263.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26263.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest26263.c

Checking for shared library support...
=== ztest26263.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest26263.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26263.so ztest26263.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest26263.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26263.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26263.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26263 ztest26263.c
Checking for strerror... Yes.

=== ztest26263.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26263.c
Checking for unistd.h... Yes.

=== ztest26263.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26263.c
Checking for stdarg.h... Yes.

=== ztest26263.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26263.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26263.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26263 ztest26263.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26263.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26263.c
Checking for return value of vsnprintf()... Yes.

=== ztest26263.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26263.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:35:31 CST
=== ztest2850.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest2850.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2850.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest2850.c

Checking for shared library support...
=== ztest2850.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest2850.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2850.so ztest2850.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest2850.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2850.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2850.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2850 ztest2850.c
Checking for strerror... Yes.

=== ztest2850.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2850.c
Checking for unistd.h... Yes.

=== ztest2850.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2850.c
Checking for stdarg.h... Yes.

=== ztest2850.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2850.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2850.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2850 ztest2850.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2850.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2850.c
Checking for return value of vsnprintf()... Yes.

=== ztest2850.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2850.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:36:12 CST
=== ztest3268.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest3268.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3268.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest3268.c

Checking for shared library support...
=== ztest3268.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest3268.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3268.so ztest3268.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest3268.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3268.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3268.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3268 ztest3268.c
Checking for strerror... Yes.

=== ztest3268.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3268.c
Checking for unistd.h... Yes.

=== ztest3268.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3268.c
Checking for stdarg.h... Yes.

=== ztest3268.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3268.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3268.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3268 ztest3268.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3268.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3268.c
Checking for return value of vsnprintf()... Yes.

=== ztest3268.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3268.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:36:55 CST
=== ztest3718.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest3718.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3718.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest3718.c

Checking for shared library support...
=== ztest3718.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest3718.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3718.so ztest3718.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest3718.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3718.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3718.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3718 ztest3718.c
Checking for strerror... Yes.

=== ztest3718.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3718.c
Checking for unistd.h... Yes.

=== ztest3718.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3718.c
Checking for stdarg.h... Yes.

=== ztest3718.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3718.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3718.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3718 ztest3718.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3718.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3718.c
Checking for return value of vsnprintf()... Yes.

=== ztest3718.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3718.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:39:32 CST
=== ztest4548.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest4548.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4548.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest4548.c

Checking for shared library support...
=== ztest4548.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest4548.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4548.so ztest4548.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest4548.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4548.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4548.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4548 ztest4548.c
Checking for strerror... Yes.

=== ztest4548.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4548.c
Checking for unistd.h... Yes.

=== ztest4548.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4548.c
Checking for stdarg.h... Yes.

=== ztest4548.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4548.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4548.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4548 ztest4548.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4548.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4548.c
Checking for return value of vsnprintf()... Yes.

=== ztest4548.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4548.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:39:59 CST
=== ztest5218.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest5218.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5218.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest5218.c

Checking for shared library support...
=== ztest5218.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest5218.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5218.so ztest5218.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest5218.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5218.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5218.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5218 ztest5218.c
Checking for strerror... Yes.

=== ztest5218.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5218.c
Checking for unistd.h... Yes.

=== ztest5218.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5218.c
Checking for stdarg.h... Yes.

=== ztest5218.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5218.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5218.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5218 ztest5218.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5218.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5218.c
Checking for return value of vsnprintf()... Yes.

=== ztest5218.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5218.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:40:27 CST
=== ztest5542.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest5542.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5542.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest5542.c

Checking for shared library support...
=== ztest5542.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest5542.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5542.so ztest5542.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest5542.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5542.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5542.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5542 ztest5542.c
Checking for strerror... Yes.

=== ztest5542.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5542.c
Checking for unistd.h... Yes.

=== ztest5542.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5542.c
Checking for stdarg.h... Yes.

=== ztest5542.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5542.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5542.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5542 ztest5542.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5542.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5542.c
Checking for return value of vsnprintf()... Yes.

=== ztest5542.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5542.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 20:41:09 CST
=== ztest5874.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest5874.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5874.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest5874.c

Checking for shared library support...
=== ztest5874.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest5874.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5874.so ztest5874.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest5874.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5874.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5874.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5874 ztest5874.c
Checking for strerror... Yes.

=== ztest5874.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5874.c
Checking for unistd.h... Yes.

=== ztest5874.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5874.c
Checking for stdarg.h... Yes.

=== ztest5874.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5874.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5874.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5874 ztest5874.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5874.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5874.c
Checking for return value of vsnprintf()... Yes.

=== ztest5874.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5874.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:02:28 CST
=== ztest11513.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest11513.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11513.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest11513.c

Checking for shared library support...
=== ztest11513.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest11513.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11513.so ztest11513.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest11513.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11513.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11513.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11513 ztest11513.c
Checking for strerror... Yes.

=== ztest11513.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11513.c
Checking for unistd.h... Yes.

=== ztest11513.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11513.c
Checking for stdarg.h... Yes.

=== ztest11513.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11513.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11513.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11513 ztest11513.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11513.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11513.c
Checking for return value of vsnprintf()... Yes.

=== ztest11513.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11513.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:02:52 CST
=== ztest11831.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest11831.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11831.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest11831.c

Checking for shared library support...
=== ztest11831.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest11831.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11831.so ztest11831.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest11831.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11831.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11831.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11831 ztest11831.c
Checking for strerror... Yes.

=== ztest11831.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11831.c
Checking for unistd.h... Yes.

=== ztest11831.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11831.c
Checking for stdarg.h... Yes.

=== ztest11831.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11831.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11831.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11831 ztest11831.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11831.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11831.c
Checking for return value of vsnprintf()... Yes.

=== ztest11831.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11831.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:06:26 CST
=== ztest20991.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest20991.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20991.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest20991.c

Checking for shared library support...
=== ztest20991.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest20991.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20991.so ztest20991.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest20991.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20991.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20991.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20991 ztest20991.c
Checking for strerror... Yes.

=== ztest20991.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20991.c
Checking for unistd.h... Yes.

=== ztest20991.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20991.c
Checking for stdarg.h... Yes.

=== ztest20991.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20991.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20991.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20991 ztest20991.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20991.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20991.c
Checking for return value of vsnprintf()... Yes.

=== ztest20991.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20991.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:07:09 CST
=== ztest21644.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest21644.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest21644.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest21644.c

Checking for shared library support...
=== ztest21644.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest21644.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest21644.so ztest21644.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest21644.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21644.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest21644.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21644 ztest21644.c
Checking for strerror... Yes.

=== ztest21644.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21644.c
Checking for unistd.h... Yes.

=== ztest21644.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21644.c
Checking for stdarg.h... Yes.

=== ztest21644.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21644.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest21644.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest21644 ztest21644.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest21644.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21644.c
Checking for return value of vsnprintf()... Yes.

=== ztest21644.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest21644.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:09:41 CST
=== ztest559.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest559.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest559.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest559.c

Checking for shared library support...
=== ztest559.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest559.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest559.so ztest559.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest559.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest559.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest559 ztest559.c
Checking for strerror... Yes.

=== ztest559.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for unistd.h... Yes.

=== ztest559.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for stdarg.h... Yes.

=== ztest559.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest559.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest559 ztest559.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest559.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for return value of vsnprintf()... Yes.

=== ztest559.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest559.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:11:44 CST
=== ztest9650.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest9650.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9650.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest9650.c

Checking for shared library support...
=== ztest9650.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest9650.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9650.so ztest9650.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest9650.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9650.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9650.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9650 ztest9650.c
Checking for strerror... Yes.

=== ztest9650.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9650.c
Checking for unistd.h... Yes.

=== ztest9650.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9650.c
Checking for stdarg.h... Yes.

=== ztest9650.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9650.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9650.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9650 ztest9650.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9650.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9650.c
Checking for return value of vsnprintf()... Yes.

=== ztest9650.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9650.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:13:28 CST
=== ztest10211.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest10211.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10211.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest10211.c

Checking for shared library support...
=== ztest10211.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest10211.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10211.so ztest10211.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest10211.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10211.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10211.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10211 ztest10211.c
Checking for strerror... Yes.

=== ztest10211.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10211.c
Checking for unistd.h... Yes.

=== ztest10211.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10211.c
Checking for stdarg.h... Yes.

=== ztest10211.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10211.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10211.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10211 ztest10211.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10211.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10211.c
Checking for return value of vsnprintf()... Yes.

=== ztest10211.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10211.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:14:04 CST
=== ztest10775.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest10775.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10775.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest10775.c

Checking for shared library support...
=== ztest10775.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest10775.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10775.so ztest10775.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest10775.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10775.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10775.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10775 ztest10775.c
Checking for strerror... Yes.

=== ztest10775.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10775.c
Checking for unistd.h... Yes.

=== ztest10775.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10775.c
Checking for stdarg.h... Yes.

=== ztest10775.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10775.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10775.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10775 ztest10775.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10775.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10775.c
Checking for return value of vsnprintf()... Yes.

=== ztest10775.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10775.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:15:18 CST
=== ztest19275.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest19275.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19275.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest19275.c

Checking for shared library support...
=== ztest19275.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest19275.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19275.so ztest19275.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest19275.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19275.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19275.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19275 ztest19275.c
Checking for strerror... Yes.

=== ztest19275.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19275.c
Checking for unistd.h... Yes.

=== ztest19275.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19275.c
Checking for stdarg.h... Yes.

=== ztest19275.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19275.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19275.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19275 ztest19275.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19275.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19275.c
Checking for return value of vsnprintf()... Yes.

=== ztest19275.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19275.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:18:37 CST
=== ztest27891.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest27891.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27891.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest27891.c

Checking for shared library support...
=== ztest27891.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest27891.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27891.so ztest27891.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest27891.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27891.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27891.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27891 ztest27891.c
Checking for strerror... Yes.

=== ztest27891.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27891.c
Checking for unistd.h... Yes.

=== ztest27891.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27891.c
Checking for stdarg.h... Yes.

=== ztest27891.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27891.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27891.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27891 ztest27891.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27891.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27891.c
Checking for return value of vsnprintf()... Yes.

=== ztest27891.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27891.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:19:45 CST
=== ztest7696.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest7696.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7696.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest7696.c

Checking for shared library support...
=== ztest7696.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest7696.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7696.so ztest7696.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest7696.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7696.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7696.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7696 ztest7696.c
Checking for strerror... Yes.

=== ztest7696.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7696.c
Checking for unistd.h... Yes.

=== ztest7696.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7696.c
Checking for stdarg.h... Yes.

=== ztest7696.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7696.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7696.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7696 ztest7696.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7696.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7696.c
Checking for return value of vsnprintf()... Yes.

=== ztest7696.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7696.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:20:51 CST
=== ztest11107.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest11107.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11107.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest11107.c

Checking for shared library support...
=== ztest11107.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest11107.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11107.so ztest11107.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest11107.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11107.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11107.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11107 ztest11107.c
Checking for strerror... Yes.

=== ztest11107.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11107.c
Checking for unistd.h... Yes.

=== ztest11107.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11107.c
Checking for stdarg.h... Yes.

=== ztest11107.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11107.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11107.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11107 ztest11107.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11107.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11107.c
Checking for return value of vsnprintf()... Yes.

=== ztest11107.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11107.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:21:58 CST
=== ztest12567.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest12567.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12567.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest12567.c

Checking for shared library support...
=== ztest12567.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest12567.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12567.so ztest12567.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest12567.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12567.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12567.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12567 ztest12567.c
Checking for strerror... Yes.

=== ztest12567.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12567.c
Checking for unistd.h... Yes.

=== ztest12567.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12567.c
Checking for stdarg.h... Yes.

=== ztest12567.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12567.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12567.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12567 ztest12567.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12567.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12567.c
Checking for return value of vsnprintf()... Yes.

=== ztest12567.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12567.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:23:09 CST
=== ztest14022.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest14022.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14022.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest14022.c

Checking for shared library support...
=== ztest14022.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest14022.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14022.so ztest14022.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest14022.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14022.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14022.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14022 ztest14022.c
Checking for strerror... Yes.

=== ztest14022.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14022.c
Checking for unistd.h... Yes.

=== ztest14022.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14022.c
Checking for stdarg.h... Yes.

=== ztest14022.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14022.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14022.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14022 ztest14022.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14022.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14022.c
Checking for return value of vsnprintf()... Yes.

=== ztest14022.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14022.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:25:04 CST
=== ztest15487.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest15487.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest15487.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest15487.c

Checking for shared library support...
=== ztest15487.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest15487.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest15487.so ztest15487.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest15487.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15487.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest15487.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15487 ztest15487.c
Checking for strerror... Yes.

=== ztest15487.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15487.c
Checking for unistd.h... Yes.

=== ztest15487.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15487.c
Checking for stdarg.h... Yes.

=== ztest15487.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15487.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest15487.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15487 ztest15487.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest15487.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15487.c
Checking for return value of vsnprintf()... Yes.

=== ztest15487.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15487.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:41:59 CST
=== ztest25029.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest25029.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25029.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest25029.c

Checking for shared library support...
=== ztest25029.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest25029.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25029.so ztest25029.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest25029.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25029.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25029.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25029 ztest25029.c
Checking for strerror... Yes.

=== ztest25029.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25029.c
Checking for unistd.h... Yes.

=== ztest25029.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25029.c
Checking for stdarg.h... Yes.

=== ztest25029.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25029.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25029.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25029 ztest25029.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25029.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25029.c
Checking for return value of vsnprintf()... Yes.

=== ztest25029.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25029.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:52:45 CST
=== ztest9329.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest9329.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9329.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest9329.c

Checking for shared library support...
=== ztest9329.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest9329.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9329.so ztest9329.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest9329.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9329.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9329.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9329 ztest9329.c
Checking for strerror... Yes.

=== ztest9329.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9329.c
Checking for unistd.h... Yes.

=== ztest9329.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9329.c
Checking for stdarg.h... Yes.

=== ztest9329.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9329.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9329.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9329 ztest9329.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9329.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9329.c
Checking for return value of vsnprintf()... Yes.

=== ztest9329.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9329.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:58:04 CST
=== ztest28015.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest28015.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28015.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest28015.c

Checking for shared library support...
=== ztest28015.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest28015.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28015.so ztest28015.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest28015.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28015.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28015.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28015 ztest28015.c
Checking for strerror... Yes.

=== ztest28015.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28015.c
Checking for unistd.h... Yes.

=== ztest28015.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28015.c
Checking for stdarg.h... Yes.

=== ztest28015.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28015.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28015.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28015 ztest28015.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28015.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28015.c
Checking for return value of vsnprintf()... Yes.

=== ztest28015.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28015.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 21:58:49 CST
=== ztest29420.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest29420.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29420.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest29420.c

Checking for shared library support...
=== ztest29420.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest29420.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29420.so ztest29420.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest29420.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29420.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29420.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29420 ztest29420.c
Checking for strerror... Yes.

=== ztest29420.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29420.c
Checking for unistd.h... Yes.

=== ztest29420.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29420.c
Checking for stdarg.h... Yes.

=== ztest29420.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29420.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29420.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29420 ztest29420.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29420.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29420.c
Checking for return value of vsnprintf()... Yes.

=== ztest29420.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29420.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:00:43 CST
=== ztest30334.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest30334.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30334.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest30334.c

Checking for shared library support...
=== ztest30334.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest30334.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30334.so ztest30334.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest30334.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30334.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30334.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30334 ztest30334.c
Checking for strerror... Yes.

=== ztest30334.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30334.c
Checking for unistd.h... Yes.

=== ztest30334.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30334.c
Checking for stdarg.h... Yes.

=== ztest30334.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30334.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30334.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30334 ztest30334.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30334.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30334.c
Checking for return value of vsnprintf()... Yes.

=== ztest30334.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30334.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:02:32 CST
=== ztest31137.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest31137.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31137.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest31137.c

Checking for shared library support...
=== ztest31137.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest31137.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31137.so ztest31137.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest31137.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31137.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31137.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31137 ztest31137.c
Checking for strerror... Yes.

=== ztest31137.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31137.c
Checking for unistd.h... Yes.

=== ztest31137.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31137.c
Checking for stdarg.h... Yes.

=== ztest31137.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31137.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31137.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31137 ztest31137.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31137.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31137.c
Checking for return value of vsnprintf()... Yes.

=== ztest31137.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31137.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:03:19 CST
=== ztest31996.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest31996.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31996.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest31996.c

Checking for shared library support...
=== ztest31996.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest31996.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31996.so ztest31996.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest31996.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31996.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31996.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31996 ztest31996.c
Checking for strerror... Yes.

=== ztest31996.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31996.c
Checking for unistd.h... Yes.

=== ztest31996.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31996.c
Checking for stdarg.h... Yes.

=== ztest31996.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31996.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31996.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31996 ztest31996.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31996.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31996.c
Checking for return value of vsnprintf()... Yes.

=== ztest31996.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31996.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:04:34 CST
=== ztest392.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest392.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest392.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest392.c

Checking for shared library support...
=== ztest392.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest392.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest392.so ztest392.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest392.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest392.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest392.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest392 ztest392.c
Checking for strerror... Yes.

=== ztest392.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest392.c
Checking for unistd.h... Yes.

=== ztest392.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest392.c
Checking for stdarg.h... Yes.

=== ztest392.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest392.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest392.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest392 ztest392.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest392.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest392.c
Checking for return value of vsnprintf()... Yes.

=== ztest392.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest392.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:06:02 CST
=== ztest1371.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest1371.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1371.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest1371.c

Checking for shared library support...
=== ztest1371.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest1371.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1371.so ztest1371.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest1371.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1371.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1371.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1371 ztest1371.c
Checking for strerror... Yes.

=== ztest1371.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1371.c
Checking for unistd.h... Yes.

=== ztest1371.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1371.c
Checking for stdarg.h... Yes.

=== ztest1371.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1371.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1371.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1371 ztest1371.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1371.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1371.c
Checking for return value of vsnprintf()... Yes.

=== ztest1371.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1371.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:09:26 CST
=== ztest2674.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest2674.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2674.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest2674.c

Checking for shared library support...
=== ztest2674.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest2674.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2674.so ztest2674.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest2674.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2674.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2674.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2674 ztest2674.c
Checking for strerror... Yes.

=== ztest2674.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2674.c
Checking for unistd.h... Yes.

=== ztest2674.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2674.c
Checking for stdarg.h... Yes.

=== ztest2674.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2674.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2674.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2674 ztest2674.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2674.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2674.c
Checking for return value of vsnprintf()... Yes.

=== ztest2674.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2674.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:09:53 CST
=== ztest3743.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest3743.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3743.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest3743.c

Checking for shared library support...
=== ztest3743.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest3743.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3743.so ztest3743.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest3743.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3743.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3743.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3743 ztest3743.c
Checking for strerror... Yes.

=== ztest3743.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3743.c
Checking for unistd.h... Yes.

=== ztest3743.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3743.c
Checking for stdarg.h... Yes.

=== ztest3743.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3743.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3743.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3743 ztest3743.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3743.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3743.c
Checking for return value of vsnprintf()... Yes.

=== ztest3743.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3743.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:17:01 CST
=== ztest5193.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest5193.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest5193.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest5193.c

Checking for shared library support...
=== ztest5193.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest5193.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest5193.so ztest5193.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest5193.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5193.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest5193.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5193 ztest5193.c
Checking for strerror... Yes.

=== ztest5193.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5193.c
Checking for unistd.h... Yes.

=== ztest5193.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5193.c
Checking for stdarg.h... Yes.

=== ztest5193.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5193.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest5193.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest5193 ztest5193.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest5193.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5193.c
Checking for return value of vsnprintf()... Yes.

=== ztest5193.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest5193.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:18:59 CST
=== ztest6474.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest6474.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6474.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest6474.c

Checking for shared library support...
=== ztest6474.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest6474.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6474.so ztest6474.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest6474.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6474.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6474.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6474 ztest6474.c
Checking for strerror... Yes.

=== ztest6474.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6474.c
Checking for unistd.h... Yes.

=== ztest6474.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6474.c
Checking for stdarg.h... Yes.

=== ztest6474.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6474.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6474.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6474 ztest6474.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6474.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6474.c
Checking for return value of vsnprintf()... Yes.

=== ztest6474.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6474.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:20:22 CST
=== ztest7487.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest7487.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7487.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest7487.c

Checking for shared library support...
=== ztest7487.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest7487.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7487.so ztest7487.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest7487.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7487.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7487.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7487 ztest7487.c
Checking for strerror... Yes.

=== ztest7487.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7487.c
Checking for unistd.h... Yes.

=== ztest7487.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7487.c
Checking for stdarg.h... Yes.

=== ztest7487.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7487.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7487.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7487 ztest7487.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7487.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7487.c
Checking for return value of vsnprintf()... Yes.

=== ztest7487.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7487.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:21:54 CST
=== ztest7791.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest7791.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7791.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest7791.c

Checking for shared library support...
=== ztest7791.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest7791.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7791.so ztest7791.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest7791.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7791.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7791.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7791 ztest7791.c
Checking for strerror... Yes.

=== ztest7791.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7791.c
Checking for unistd.h... Yes.

=== ztest7791.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7791.c
Checking for stdarg.h... Yes.

=== ztest7791.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7791.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7791.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7791 ztest7791.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7791.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7791.c
Checking for return value of vsnprintf()... Yes.

=== ztest7791.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7791.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:22:13 CST
=== ztest8006.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest8006.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8006.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest8006.c

Checking for shared library support...
=== ztest8006.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest8006.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8006.so ztest8006.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest8006.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8006.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8006.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8006 ztest8006.c
Checking for strerror... Yes.

=== ztest8006.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8006.c
Checking for unistd.h... Yes.

=== ztest8006.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8006.c
Checking for stdarg.h... Yes.

=== ztest8006.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8006.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8006.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8006 ztest8006.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8006.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8006.c
Checking for return value of vsnprintf()... Yes.

=== ztest8006.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8006.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:23:51 CST
=== ztest8276.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest8276.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8276.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest8276.c

Checking for shared library support...
=== ztest8276.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest8276.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8276.so ztest8276.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest8276.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8276.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8276.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8276 ztest8276.c
Checking for strerror... Yes.

=== ztest8276.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8276.c
Checking for unistd.h... Yes.

=== ztest8276.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8276.c
Checking for stdarg.h... Yes.

=== ztest8276.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8276.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8276.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8276 ztest8276.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8276.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8276.c
Checking for return value of vsnprintf()... Yes.

=== ztest8276.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8276.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:25:56 CST
=== ztest9716.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest9716.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9716.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest9716.c

Checking for shared library support...
=== ztest9716.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest9716.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9716.so ztest9716.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest9716.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9716.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9716.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9716 ztest9716.c
Checking for strerror... Yes.

=== ztest9716.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9716.c
Checking for unistd.h... Yes.

=== ztest9716.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9716.c
Checking for stdarg.h... Yes.

=== ztest9716.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9716.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9716.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9716 ztest9716.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9716.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9716.c
Checking for return value of vsnprintf()... Yes.

=== ztest9716.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9716.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:29:26 CST
=== ztest10940.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest10940.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10940.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest10940.c

Checking for shared library support...
=== ztest10940.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest10940.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10940.so ztest10940.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest10940.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10940.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10940.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10940 ztest10940.c
Checking for strerror... Yes.

=== ztest10940.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10940.c
Checking for unistd.h... Yes.

=== ztest10940.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10940.c
Checking for stdarg.h... Yes.

=== ztest10940.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10940.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10940.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10940 ztest10940.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10940.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10940.c
Checking for return value of vsnprintf()... Yes.

=== ztest10940.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10940.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:31:25 CST
=== ztest12097.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest12097.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12097.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest12097.c

Checking for shared library support...
=== ztest12097.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest12097.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12097.so ztest12097.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest12097.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12097.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12097.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12097 ztest12097.c
Checking for strerror... Yes.

=== ztest12097.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12097.c
Checking for unistd.h... Yes.

=== ztest12097.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12097.c
Checking for stdarg.h... Yes.

=== ztest12097.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12097.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12097.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12097 ztest12097.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12097.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12097.c
Checking for return value of vsnprintf()... Yes.

=== ztest12097.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12097.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:32:37 CST
=== ztest13267.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest13267.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13267.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest13267.c

Checking for shared library support...
=== ztest13267.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest13267.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13267.so ztest13267.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest13267.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13267.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13267.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13267 ztest13267.c
Checking for strerror... Yes.

=== ztest13267.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13267.c
Checking for unistd.h... Yes.

=== ztest13267.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13267.c
Checking for stdarg.h... Yes.

=== ztest13267.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13267.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13267.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13267 ztest13267.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13267.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13267.c
Checking for return value of vsnprintf()... Yes.

=== ztest13267.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13267.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:34:06 CST
=== ztest14524.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest14524.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14524.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest14524.c

Checking for shared library support...
=== ztest14524.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest14524.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14524.so ztest14524.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest14524.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14524.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14524.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14524 ztest14524.c
Checking for strerror... Yes.

=== ztest14524.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14524.c
Checking for unistd.h... Yes.

=== ztest14524.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14524.c
Checking for stdarg.h... Yes.

=== ztest14524.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14524.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14524.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14524 ztest14524.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14524.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14524.c
Checking for return value of vsnprintf()... Yes.

=== ztest14524.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14524.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:34:38 CST
=== ztest15480.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest15480.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest15480.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest15480.c

Checking for shared library support...
=== ztest15480.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest15480.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest15480.so ztest15480.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest15480.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15480.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest15480.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15480 ztest15480.c
Checking for strerror... Yes.

=== ztest15480.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15480.c
Checking for unistd.h... Yes.

=== ztest15480.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15480.c
Checking for stdarg.h... Yes.

=== ztest15480.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15480.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest15480.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15480 ztest15480.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest15480.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15480.c
Checking for return value of vsnprintf()... Yes.

=== ztest15480.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15480.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:36:32 CST
=== ztest16642.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest16642.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16642.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest16642.c

Checking for shared library support...
=== ztest16642.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest16642.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest16642.so ztest16642.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest16642.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16642.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest16642.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16642 ztest16642.c
Checking for strerror... Yes.

=== ztest16642.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16642.c
Checking for unistd.h... Yes.

=== ztest16642.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16642.c
Checking for stdarg.h... Yes.

=== ztest16642.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16642.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16642.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest16642 ztest16642.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16642.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16642.c
Checking for return value of vsnprintf()... Yes.

=== ztest16642.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16642.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:37:50 CST
=== ztest17578.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest17578.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17578.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest17578.c

Checking for shared library support...
=== ztest17578.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest17578.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest17578.so ztest17578.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest17578.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17578.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest17578.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17578 ztest17578.c
Checking for strerror... Yes.

=== ztest17578.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17578.c
Checking for unistd.h... Yes.

=== ztest17578.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17578.c
Checking for stdarg.h... Yes.

=== ztest17578.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17578.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17578.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest17578 ztest17578.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17578.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17578.c
Checking for return value of vsnprintf()... Yes.

=== ztest17578.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest17578.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:40:04 CST
=== ztest18535.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest18535.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18535.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest18535.c

Checking for shared library support...
=== ztest18535.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest18535.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest18535.so ztest18535.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest18535.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18535.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest18535.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18535 ztest18535.c
Checking for strerror... Yes.

=== ztest18535.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18535.c
Checking for unistd.h... Yes.

=== ztest18535.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18535.c
Checking for stdarg.h... Yes.

=== ztest18535.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18535.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest18535.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest18535 ztest18535.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest18535.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18535.c
Checking for return value of vsnprintf()... Yes.

=== ztest18535.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest18535.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:42:42 CST
=== ztest19521.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest19521.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19521.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest19521.c

Checking for shared library support...
=== ztest19521.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest19521.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19521.so ztest19521.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest19521.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19521.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19521.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19521 ztest19521.c
Checking for strerror... Yes.

=== ztest19521.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19521.c
Checking for unistd.h... Yes.

=== ztest19521.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19521.c
Checking for stdarg.h... Yes.

=== ztest19521.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19521.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19521.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19521 ztest19521.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19521.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19521.c
Checking for return value of vsnprintf()... Yes.

=== ztest19521.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19521.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:44:16 CST
=== ztest20671.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest20671.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20671.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest20671.c

Checking for shared library support...
=== ztest20671.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest20671.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20671.so ztest20671.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest20671.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20671.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20671.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20671 ztest20671.c
Checking for strerror... Yes.

=== ztest20671.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20671.c
Checking for unistd.h... Yes.

=== ztest20671.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20671.c
Checking for stdarg.h... Yes.

=== ztest20671.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20671.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20671.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20671 ztest20671.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20671.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20671.c
Checking for return value of vsnprintf()... Yes.

=== ztest20671.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20671.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:46:43 CST
=== ztest22006.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest22006.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest22006.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest22006.c

Checking for shared library support...
=== ztest22006.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest22006.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest22006.so ztest22006.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest22006.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22006.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest22006.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22006 ztest22006.c
Checking for strerror... Yes.

=== ztest22006.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22006.c
Checking for unistd.h... Yes.

=== ztest22006.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22006.c
Checking for stdarg.h... Yes.

=== ztest22006.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22006.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest22006.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest22006 ztest22006.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest22006.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22006.c
Checking for return value of vsnprintf()... Yes.

=== ztest22006.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest22006.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:49:33 CST
=== ztest23547.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest23547.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23547.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest23547.c

Checking for shared library support...
=== ztest23547.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest23547.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23547.so ztest23547.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest23547.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23547.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23547.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23547 ztest23547.c
Checking for strerror... Yes.

=== ztest23547.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23547.c
Checking for unistd.h... Yes.

=== ztest23547.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23547.c
Checking for stdarg.h... Yes.

=== ztest23547.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23547.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23547.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23547 ztest23547.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23547.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23547.c
Checking for return value of vsnprintf()... Yes.

=== ztest23547.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23547.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:50:28 CST
=== ztest24549.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest24549.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24549.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest24549.c

Checking for shared library support...
=== ztest24549.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest24549.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24549.so ztest24549.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest24549.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24549.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24549.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24549 ztest24549.c
Checking for strerror... Yes.

=== ztest24549.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24549.c
Checking for unistd.h... Yes.

=== ztest24549.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24549.c
Checking for stdarg.h... Yes.

=== ztest24549.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24549.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24549.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24549 ztest24549.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24549.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24549.c
Checking for return value of vsnprintf()... Yes.

=== ztest24549.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24549.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:50:41 CST
=== ztest25506.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest25506.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25506.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest25506.c

Checking for shared library support...
=== ztest25506.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest25506.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25506.so ztest25506.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest25506.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25506.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25506.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25506 ztest25506.c
Checking for strerror... Yes.

=== ztest25506.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25506.c
Checking for unistd.h... Yes.

=== ztest25506.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25506.c
Checking for stdarg.h... Yes.

=== ztest25506.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25506.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25506.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25506 ztest25506.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25506.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25506.c
Checking for return value of vsnprintf()... Yes.

=== ztest25506.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25506.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:54:36 CST
=== ztest26780.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest26780.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26780.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest26780.c

Checking for shared library support...
=== ztest26780.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest26780.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26780.so ztest26780.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest26780.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26780.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26780.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26780 ztest26780.c
Checking for strerror... Yes.

=== ztest26780.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26780.c
Checking for unistd.h... Yes.

=== ztest26780.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26780.c
Checking for stdarg.h... Yes.

=== ztest26780.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26780.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26780.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26780 ztest26780.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26780.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26780.c
Checking for return value of vsnprintf()... Yes.

=== ztest26780.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26780.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:55:18 CST
=== ztest6820.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest6820.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6820.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest6820.c

Checking for shared library support...
=== ztest6820.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest6820.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6820.so ztest6820.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest6820.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6820.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6820.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6820 ztest6820.c
Checking for strerror... Yes.

=== ztest6820.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6820.c
Checking for unistd.h... Yes.

=== ztest6820.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6820.c
Checking for stdarg.h... Yes.

=== ztest6820.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6820.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6820.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6820 ztest6820.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6820.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6820.c
Checking for return value of vsnprintf()... Yes.

=== ztest6820.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6820.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:56:13 CST
=== ztest7948.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest7948.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest7948.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest7948.c

Checking for shared library support...
=== ztest7948.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest7948.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest7948.so ztest7948.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest7948.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7948.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest7948.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7948 ztest7948.c
Checking for strerror... Yes.

=== ztest7948.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7948.c
Checking for unistd.h... Yes.

=== ztest7948.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7948.c
Checking for stdarg.h... Yes.

=== ztest7948.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7948.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest7948.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest7948 ztest7948.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest7948.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7948.c
Checking for return value of vsnprintf()... Yes.

=== ztest7948.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest7948.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:56:26 CST
=== ztest8905.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest8905.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest8905.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest8905.c

Checking for shared library support...
=== ztest8905.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest8905.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest8905.so ztest8905.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest8905.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8905.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest8905.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8905 ztest8905.c
Checking for strerror... Yes.

=== ztest8905.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8905.c
Checking for unistd.h... Yes.

=== ztest8905.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8905.c
Checking for stdarg.h... Yes.

=== ztest8905.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8905.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest8905.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest8905 ztest8905.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest8905.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8905.c
Checking for return value of vsnprintf()... Yes.

=== ztest8905.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest8905.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:57:01 CST
=== ztest9405.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest9405.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9405.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest9405.c

Checking for shared library support...
=== ztest9405.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest9405.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9405.so ztest9405.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest9405.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9405.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9405 ztest9405.c
Checking for strerror... Yes.

=== ztest9405.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for unistd.h... Yes.

=== ztest9405.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for stdarg.h... Yes.

=== ztest9405.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9405.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9405 ztest9405.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9405.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for return value of vsnprintf()... Yes.

=== ztest9405.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9405.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:57:14 CST
=== ztest10363.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest10363.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10363.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest10363.c

Checking for shared library support...
=== ztest10363.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest10363.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10363.so ztest10363.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest10363.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10363.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10363.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10363 ztest10363.c
Checking for strerror... Yes.

=== ztest10363.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10363.c
Checking for unistd.h... Yes.

=== ztest10363.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10363.c
Checking for stdarg.h... Yes.

=== ztest10363.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10363.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10363.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10363 ztest10363.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10363.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10363.c
Checking for return value of vsnprintf()... Yes.

=== ztest10363.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10363.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:57:40 CST
=== ztest10870.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest10870.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10870.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest10870.c

Checking for shared library support...
=== ztest10870.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest10870.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest10870.so ztest10870.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest10870.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10870.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10870.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10870 ztest10870.c
Checking for strerror... Yes.

=== ztest10870.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10870.c
Checking for unistd.h... Yes.

=== ztest10870.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10870.c
Checking for stdarg.h... Yes.

=== ztest10870.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10870.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10870.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest10870 ztest10870.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10870.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10870.c
Checking for return value of vsnprintf()... Yes.

=== ztest10870.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10870.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:57:53 CST
=== ztest11827.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest11827.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest11827.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest11827.c

Checking for shared library support...
=== ztest11827.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest11827.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest11827.so ztest11827.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest11827.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11827.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest11827.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11827 ztest11827.c
Checking for strerror... Yes.

=== ztest11827.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11827.c
Checking for unistd.h... Yes.

=== ztest11827.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11827.c
Checking for stdarg.h... Yes.

=== ztest11827.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11827.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest11827.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest11827 ztest11827.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest11827.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11827.c
Checking for return value of vsnprintf()... Yes.

=== ztest11827.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest11827.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:58:40 CST
=== ztest12324.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest12324.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12324.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest12324.c

Checking for shared library support...
=== ztest12324.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest12324.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12324.so ztest12324.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest12324.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12324.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12324.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12324 ztest12324.c
Checking for strerror... Yes.

=== ztest12324.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12324.c
Checking for unistd.h... Yes.

=== ztest12324.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12324.c
Checking for stdarg.h... Yes.

=== ztest12324.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12324.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12324.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12324 ztest12324.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12324.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12324.c
Checking for return value of vsnprintf()... Yes.

=== ztest12324.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12324.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 22:58:53 CST
=== ztest13281.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest13281.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13281.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest13281.c

Checking for shared library support...
=== ztest13281.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest13281.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13281.so ztest13281.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest13281.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13281.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13281.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13281 ztest13281.c
Checking for strerror... Yes.

=== ztest13281.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13281.c
Checking for unistd.h... Yes.

=== ztest13281.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13281.c
Checking for stdarg.h... Yes.

=== ztest13281.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13281.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13281.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13281 ztest13281.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13281.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13281.c
Checking for return value of vsnprintf()... Yes.

=== ztest13281.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13281.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:01:57 CST
=== ztest13915.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest13915.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13915.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest13915.c

Checking for shared library support...
=== ztest13915.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest13915.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13915.so ztest13915.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest13915.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13915.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13915.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13915 ztest13915.c
Checking for strerror... Yes.

=== ztest13915.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13915.c
Checking for unistd.h... Yes.

=== ztest13915.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13915.c
Checking for stdarg.h... Yes.

=== ztest13915.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13915.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13915.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13915 ztest13915.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13915.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13915.c
Checking for return value of vsnprintf()... Yes.

=== ztest13915.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13915.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:02:33 CST
=== ztest24215.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest24215.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest24215.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest24215.c

Checking for shared library support...
=== ztest24215.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest24215.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest24215.so ztest24215.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest24215.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24215.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest24215.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24215 ztest24215.c
Checking for strerror... Yes.

=== ztest24215.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24215.c
Checking for unistd.h... Yes.

=== ztest24215.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24215.c
Checking for stdarg.h... Yes.

=== ztest24215.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24215.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest24215.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest24215 ztest24215.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest24215.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24215.c
Checking for return value of vsnprintf()... Yes.

=== ztest24215.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest24215.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:04:02 CST
=== ztest25271.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest25271.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25271.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest25271.c

Checking for shared library support...
=== ztest25271.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest25271.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25271.so ztest25271.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest25271.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25271.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25271.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25271 ztest25271.c
Checking for strerror... Yes.

=== ztest25271.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25271.c
Checking for unistd.h... Yes.

=== ztest25271.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25271.c
Checking for stdarg.h... Yes.

=== ztest25271.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25271.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25271.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25271 ztest25271.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25271.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25271.c
Checking for return value of vsnprintf()... Yes.

=== ztest25271.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25271.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:04:14 CST
=== ztest26228.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest26228.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest26228.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest26228.c

Checking for shared library support...
=== ztest26228.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest26228.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest26228.so ztest26228.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest26228.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26228.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest26228.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26228 ztest26228.c
Checking for strerror... Yes.

=== ztest26228.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26228.c
Checking for unistd.h... Yes.

=== ztest26228.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26228.c
Checking for stdarg.h... Yes.

=== ztest26228.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26228.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest26228.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest26228 ztest26228.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest26228.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26228.c
Checking for return value of vsnprintf()... Yes.

=== ztest26228.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest26228.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:10:53 CST
=== ztest27140.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest27140.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27140.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest27140.c

Checking for shared library support...
=== ztest27140.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest27140.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27140.so ztest27140.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest27140.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27140.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27140.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27140 ztest27140.c
Checking for strerror... Yes.

=== ztest27140.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27140.c
Checking for unistd.h... Yes.

=== ztest27140.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27140.c
Checking for stdarg.h... Yes.

=== ztest27140.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27140.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27140.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27140 ztest27140.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27140.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27140.c
Checking for return value of vsnprintf()... Yes.

=== ztest27140.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27140.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:11:05 CST
=== ztest28103.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest28103.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28103.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest28103.c

Checking for shared library support...
=== ztest28103.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest28103.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28103.so ztest28103.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest28103.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28103.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28103.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28103 ztest28103.c
Checking for strerror... Yes.

=== ztest28103.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28103.c
Checking for unistd.h... Yes.

=== ztest28103.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28103.c
Checking for stdarg.h... Yes.

=== ztest28103.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28103.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28103.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28103 ztest28103.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28103.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28103.c
Checking for return value of vsnprintf()... Yes.

=== ztest28103.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28103.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:13:53 CST
=== ztest28684.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest28684.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28684.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest28684.c

Checking for shared library support...
=== ztest28684.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest28684.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28684.so ztest28684.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest28684.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28684.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28684.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28684 ztest28684.c
Checking for strerror... Yes.

=== ztest28684.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28684.c
Checking for unistd.h... Yes.

=== ztest28684.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28684.c
Checking for stdarg.h... Yes.

=== ztest28684.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28684.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28684.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28684 ztest28684.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28684.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28684.c
Checking for return value of vsnprintf()... Yes.

=== ztest28684.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28684.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:14:06 CST
=== ztest29641.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest29641.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest29641.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest29641.c

Checking for shared library support...
=== ztest29641.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest29641.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest29641.so ztest29641.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest29641.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29641.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest29641.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29641 ztest29641.c
Checking for strerror... Yes.

=== ztest29641.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29641.c
Checking for unistd.h... Yes.

=== ztest29641.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29641.c
Checking for stdarg.h... Yes.

=== ztest29641.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29641.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest29641.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest29641 ztest29641.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest29641.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29641.c
Checking for return value of vsnprintf()... Yes.

=== ztest29641.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest29641.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:15:40 CST
=== ztest30189.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest30189.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30189.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest30189.c

Checking for shared library support...
=== ztest30189.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest30189.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30189.so ztest30189.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest30189.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30189.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30189.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30189 ztest30189.c
Checking for strerror... Yes.

=== ztest30189.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30189.c
Checking for unistd.h... Yes.

=== ztest30189.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30189.c
Checking for stdarg.h... Yes.

=== ztest30189.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30189.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30189.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30189 ztest30189.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30189.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30189.c
Checking for return value of vsnprintf()... Yes.

=== ztest30189.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30189.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:15:52 CST
=== ztest31146.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest31146.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31146.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest31146.c

Checking for shared library support...
=== ztest31146.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest31146.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31146.so ztest31146.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest31146.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31146.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31146.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31146 ztest31146.c
Checking for strerror... Yes.

=== ztest31146.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31146.c
Checking for unistd.h... Yes.

=== ztest31146.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31146.c
Checking for stdarg.h... Yes.

=== ztest31146.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31146.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31146.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31146 ztest31146.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31146.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31146.c
Checking for return value of vsnprintf()... Yes.

=== ztest31146.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31146.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:19:11 CST
=== ztest31726.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest31726.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31726.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest31726.c

Checking for shared library support...
=== ztest31726.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest31726.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest31726.so ztest31726.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest31726.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31726.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest31726.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31726 ztest31726.c
Checking for strerror... Yes.

=== ztest31726.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31726.c
Checking for unistd.h... Yes.

=== ztest31726.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31726.c
Checking for stdarg.h... Yes.

=== ztest31726.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31726.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31726.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest31726 ztest31726.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31726.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31726.c
Checking for return value of vsnprintf()... Yes.

=== ztest31726.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31726.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:19:24 CST
=== ztest32682.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest32682.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest32682.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest32682.c

Checking for shared library support...
=== ztest32682.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest32682.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest32682.so ztest32682.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest32682.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32682.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest32682.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32682 ztest32682.c
Checking for strerror... Yes.

=== ztest32682.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32682.c
Checking for unistd.h... Yes.

=== ztest32682.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32682.c
Checking for stdarg.h... Yes.

=== ztest32682.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32682.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest32682.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest32682 ztest32682.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest32682.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32682.c
Checking for return value of vsnprintf()... Yes.

=== ztest32682.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest32682.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:22:41 CST
=== ztest889.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest889.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest889.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest889.c

Checking for shared library support...
=== ztest889.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest889.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest889.so ztest889.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest889.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest889.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest889.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest889 ztest889.c
Checking for strerror... Yes.

=== ztest889.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest889.c
Checking for unistd.h... Yes.

=== ztest889.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest889.c
Checking for stdarg.h... Yes.

=== ztest889.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest889.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest889.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest889 ztest889.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest889.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest889.c
Checking for return value of vsnprintf()... Yes.

=== ztest889.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest889.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:23:18 CST
=== ztest1549.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest1549.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1549.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest1549.c

Checking for shared library support...
=== ztest1549.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest1549.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1549.so ztest1549.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest1549.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1549.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1549.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1549 ztest1549.c
Checking for strerror... Yes.

=== ztest1549.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1549.c
Checking for unistd.h... Yes.

=== ztest1549.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1549.c
Checking for stdarg.h... Yes.

=== ztest1549.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1549.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1549.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1549 ztest1549.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1549.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1549.c
Checking for return value of vsnprintf()... Yes.

=== ztest1549.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1549.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:23:54 CST
=== ztest12362.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest12362.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12362.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest12362.c

Checking for shared library support...
=== ztest12362.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest12362.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12362.so ztest12362.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest12362.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12362.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12362.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12362 ztest12362.c
Checking for strerror... Yes.

=== ztest12362.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12362.c
Checking for unistd.h... Yes.

=== ztest12362.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12362.c
Checking for stdarg.h... Yes.

=== ztest12362.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12362.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12362.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12362 ztest12362.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12362.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12362.c
Checking for return value of vsnprintf()... Yes.

=== ztest12362.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12362.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:25:53 CST
=== ztest12944.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest12944.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest12944.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest12944.c

Checking for shared library support...
=== ztest12944.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest12944.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest12944.so ztest12944.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest12944.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12944.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest12944.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12944 ztest12944.c
Checking for strerror... Yes.

=== ztest12944.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12944.c
Checking for unistd.h... Yes.

=== ztest12944.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12944.c
Checking for stdarg.h... Yes.

=== ztest12944.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12944.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest12944.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest12944 ztest12944.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest12944.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12944.c
Checking for return value of vsnprintf()... Yes.

=== ztest12944.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest12944.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:26:28 CST
=== ztest23125.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest23125.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23125.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest23125.c

Checking for shared library support...
=== ztest23125.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest23125.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23125.so ztest23125.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest23125.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23125.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23125.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23125 ztest23125.c
Checking for strerror... Yes.

=== ztest23125.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23125.c
Checking for unistd.h... Yes.

=== ztest23125.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23125.c
Checking for stdarg.h... Yes.

=== ztest23125.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23125.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23125.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23125 ztest23125.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23125.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23125.c
Checking for return value of vsnprintf()... Yes.

=== ztest23125.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23125.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:28:44 CST
=== ztest23941.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest23941.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23941.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest23941.c

Checking for shared library support...
=== ztest23941.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest23941.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23941.so ztest23941.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest23941.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23941.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23941.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23941 ztest23941.c
Checking for strerror... Yes.

=== ztest23941.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23941.c
Checking for unistd.h... Yes.

=== ztest23941.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23941.c
Checking for stdarg.h... Yes.

=== ztest23941.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23941.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23941.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23941 ztest23941.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23941.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23941.c
Checking for return value of vsnprintf()... Yes.

=== ztest23941.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23941.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:29:18 CST
=== ztest2317.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest2317.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest2317.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest2317.c

Checking for shared library support...
=== ztest2317.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest2317.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest2317.so ztest2317.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest2317.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2317.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest2317.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2317 ztest2317.c
Checking for strerror... Yes.

=== ztest2317.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2317.c
Checking for unistd.h... Yes.

=== ztest2317.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2317.c
Checking for stdarg.h... Yes.

=== ztest2317.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2317.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest2317.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest2317 ztest2317.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest2317.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2317.c
Checking for return value of vsnprintf()... Yes.

=== ztest2317.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest2317.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:30:53 CST
=== ztest3246.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest3246.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest3246.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest3246.c

Checking for shared library support...
=== ztest3246.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest3246.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest3246.so ztest3246.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest3246.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3246.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest3246.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3246 ztest3246.c
Checking for strerror... Yes.

=== ztest3246.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3246.c
Checking for unistd.h... Yes.

=== ztest3246.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3246.c
Checking for stdarg.h... Yes.

=== ztest3246.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3246.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest3246.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest3246 ztest3246.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest3246.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3246.c
Checking for return value of vsnprintf()... Yes.

=== ztest3246.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest3246.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 28日 星期二 23:31:28 CST
=== ztest14105.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c ztest14105.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14105.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 ztest14105.c

Checking for shared library support...
=== ztest14105.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -w -c -O3 -fPIC ztest14105.c
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest14105.so ztest14105.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc.

=== ztest14105.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14105.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14105.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14105 ztest14105.c
Checking for strerror... Yes.

=== ztest14105.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14105.c
Checking for unistd.h... Yes.

=== ztest14105.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14105.c
Checking for stdarg.h... Yes.

=== ztest14105.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14105.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14105.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest14105 ztest14105.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14105.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14105.c
Checking for return value of vsnprintf()... Yes.

=== ztest14105.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest14105.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/arm/arm-none-linux-gnueabi/bin/arm-none-linux-gnueabi-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 29日 星期三 00:00:01 CST
=== ztest15939.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest15939.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest15939.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest15939.c

Checking for shared library support...
=== ztest15939.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest15939.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest15939.so ztest15939.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest15939.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15939.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest15939.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15939 ztest15939.c
Checking for strerror... Yes.

=== ztest15939.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15939.c
Checking for unistd.h... Yes.

=== ztest15939.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15939.c
Checking for stdarg.h... Yes.

=== ztest15939.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15939.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest15939.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest15939 ztest15939.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest15939.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15939.c
Checking for return value of vsnprintf()... Yes.

=== ztest15939.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest15939.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 29日 星期三 00:02:31 CST
=== ztest19029.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c ztest19029.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19029.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 ztest19029.c

Checking for shared library support...
=== ztest19029.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -w -c -O3 -fPIC ztest19029.c
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19029.so ztest19029.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc.

=== ztest19029.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19029.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19029.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19029 ztest19029.c
Checking for strerror... Yes.

=== ztest19029.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19029.c
Checking for unistd.h... Yes.

=== ztest19029.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19029.c
Checking for stdarg.h... Yes.

=== ztest19029.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19029.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19029.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19029 ztest19029.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19029.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19029.c
Checking for return value of vsnprintf()... Yes.

=== ztest19029.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19029.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 29日 星期三 00:04:21 CST
=== ztest19952.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c ztest19952.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19952.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 ztest19952.c

Checking for shared library support...
=== ztest19952.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -w -c -O3 -fPIC ztest19952.c
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19952.so ztest19952.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc.

=== ztest19952.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19952.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19952.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19952 ztest19952.c
Checking for strerror... Yes.

=== ztest19952.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19952.c
Checking for unistd.h... Yes.

=== ztest19952.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19952.c
Checking for stdarg.h... Yes.

=== ztest19952.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19952.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19952.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest19952 ztest19952.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19952.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19952.c
Checking for return value of vsnprintf()... Yes.

=== ztest19952.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest19952.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 29日 星期三 00:05:13 CST
=== ztest28892.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c ztest28892.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest28892.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 ztest28892.c

Checking for shared library support...
=== ztest28892.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -w -c -O3 -fPIC ztest28892.c
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest28892.so ztest28892.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc.

=== ztest28892.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28892.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest28892.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28892 ztest28892.c
Checking for strerror... Yes.

=== ztest28892.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28892.c
Checking for unistd.h... Yes.

=== ztest28892.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28892.c
Checking for stdarg.h... Yes.

=== ztest28892.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28892.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest28892.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest28892 ztest28892.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest28892.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28892.c
Checking for return value of vsnprintf()... Yes.

=== ztest28892.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest28892.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
2015年 07月 29日 星期三 00:09:45 CST
=== ztest25058.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c ztest25058.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25058.c ===
int foo() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 ztest25058.c

Checking for shared library support...
=== ztest25058.c ===
extern int getchar();
int hello() {return getchar();}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -w -c -O3 -fPIC ztest25058.c
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25058.so ztest25058.o
Building shared library libz.so.1.2.8 with /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc.

=== ztest25058.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25058.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25058.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25058 ztest25058.c
Checking for strerror... Yes.

=== ztest25058.c ===
#include <unistd.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25058.c
Checking for unistd.h... Yes.

=== ztest25058.c ===
#include <stdarg.h>
int main() { return 0; }
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25058.c
Checking for stdarg.h... Yes.

=== ztest25058.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25058.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25058.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25058 ztest25058.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25058.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25058.c
Checking for return value of vsnprintf()... Yes.

=== ztest25058.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25058.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ar
ARFLAGS = rc
CC = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = /home/ektksc/project/toolchain/x86_64/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


