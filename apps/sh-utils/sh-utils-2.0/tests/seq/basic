#!/bin/sh
# -*- perl -*-

: ${PERL=perl}
: ${srcdir=.}

case "$PERL" in
  *'missing perl')
  echo 1>&2 "$0: configure didn't find a usable version of Perl, so can't run this test"
  #'
  exit 77
  ;;
esac

exec $PERL -w -I$srcdir/.. -MFetish -- - << \EOF
require 5.003;
use strict;

(my $program_name = $0) =~ s|.*/||;

# Turn off localisation of executable's ouput.
@ENV{qw(LANGUAGE LANG LC_ALL)} = ('C') x 3;

my $prog = $ENV{PROG} || die "$0: \$PROG not specified in environment\n";

my @Tests =
  (
   ['onearg-1',	qw(10),		{OUT => [(1..10)]}],
   ['onearg-2',	qw(-1),		{OUT => [qw(1 0 -1)]}],
   ['neg-1',	qw(-10 10 10),	{OUT => [qw(-10 0 10)]}],
   ['neg-2',	qw(-.1 .1 .1),	{OUT => [qw(-0.1 0 0.1)]}],
   ['neg-3',	qw(1 -1 0),	{OUT => [qw(1 0)]}],
   ['neg-4',	qw(1 -1 -1),	{OUT => [qw(1 0 -1)]}],
  );

# Append a newline to each entry in the OUT array.
my $t;
foreach $t (@Tests)
  {
    my $e;
    foreach $e (@$t)
      {
	$e->{OUT} = join ("\n", @{$e->{OUT}}) . "\n"
	  if ref $e eq 'HASH' and exists $e->{OUT};
      }
  }

my $save_temps = $ENV{SAVE_TEMPS};
my $verbose = $ENV{VERBOSE};

my $fail = run_tests ($program_name, $prog, \@Tests, $save_temps, $verbose);
exit $fail;
EOF
