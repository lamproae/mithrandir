'\" t
.TH "TMPFILES\&.D" "5" "" "systemd 221" "tmpfiles.d"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
tmpfiles.d \- Configuration for creation, deletion and cleaning of volatile and temporary files
.SH "SYNOPSIS"
.PP
/etc/tmpfiles\&.d/*\&.conf
.PP
/run/tmpfiles\&.d/*\&.conf
.PP
/usr/lib/tmpfiles\&.d/*\&.conf
.SH "DESCRIPTION"
.PP
\fBsystemd\-tmpfiles\fR
uses the configuration files from the above directories to describe the creation, cleaning and removal of volatile and temporary files and directories which usually reside in directories such as
/run
or
/tmp\&.
.PP
Volatile and temporary files and directories are those located in
/run
(and its alias
/var/run),
/tmp,
/var/tmp, the API file systems such as
/sys
or
/proc, as well as some other directories below
/var\&.
.PP
System daemons frequently require private runtime directories below
/run
to place communication sockets and similar in\&. For these, consider declaring them in their unit files using
\fIRuntimeDirectory=\fR
(see
\fBsystemd.exec\fR(5)
for details), if this is feasible\&.
.SH "CONFIGURATION FORMAT"
.PP
Each configuration file shall be named in the style of
\fIpackage\fR\&.conf
or
\fIpackage\fR\-\fIpart\fR\&.conf\&. The second variant should be used when it is desirable to make it easy to override just this part of configuration\&.
.PP
Files in
/etc/tmpfiles\&.d
override files with the same name in
/usr/lib/tmpfiles\&.d
and
/run/tmpfiles\&.d\&. Files in
/run/tmpfiles\&.d
override files with the same name in
/usr/lib/tmpfiles\&.d\&. Packages should install their configuration files in
/usr/lib/tmpfiles\&.d\&. Files in
/etc/tmpfiles\&.d
are reserved for the local administrator, who may use this logic to override the configuration files installed by vendor packages\&. All configuration files are sorted by their filename in lexicographic order, regardless of which of the directories they reside in\&. If multiple files specify the same path, the entry in the file with the lexicographically earliest name will be applied\&. All other conflicting entries will be logged as errors\&. When two lines are prefix and suffix of each other, then the prefix is always processed first, the suffix later\&. Lines that take globs are applied after those accepting no globs\&. If multiple operations shall be applied on the same file (such as ACL, xattr, file attribute adjustments) these are always done in the same fixed order\&. Otherwise, the files/directories are processed in the order they are listed\&.
.PP
If the administrator wants to disable a configuration file supplied by the vendor, the recommended way is to place a symlink to
/dev/null
in
/etc/tmpfiles\&.d/
bearing the same filename\&.
.PP
The configuration format is one line per path containing type, path, mode, ownership, age, and argument fields:
.sp
.if n \{\
.RS 4
.\}
.nf
#Type Path        Mode UID  GID  Age Argument
    d    /run/user   0755 root root 10d \-
    L    /tmp/foobar \-    \-    \-    \-   /dev/null
.fi
.if n \{\
.RE
.\}
.PP
Fields may be enclosed within quotes and contain C\-style escapes\&.
.SS "Type"
.PP
The type consists of a single letter and optionally an exclamation mark\&.
.PP
The following line types are understood:
.PP
\fIf\fR
.RS 4
Create a file if it does not exist yet\&. If the argument parameter is given, it will be written to the file\&. Does not follow symlinks\&.
.RE
.PP
\fIF\fR
.RS 4
Create or truncate a file\&. If the argument parameter is given, it will be written to the file\&. Does not follow symlinks\&.
.RE
.PP
\fIw\fR
.RS 4
Write the argument parameter to a file, if the file exists\&. Lines of this type accept shell\-style globs in place of normal path names\&. The argument parameter will be written without a trailing newline\&. C\-style backslash escapes are interpreted\&. Follows symlinks\&.
.RE
.PP
\fId\fR
.RS 4
Create a directory if it does not exist yet\&.
.RE
.PP
\fID\fR
.RS 4
Create or empty a directory\&.
.RE
.PP
\fIv\fR
.RS 4
Create a subvolume if the path does not exist yet and the file system supports this (btrfs)\&. Otherwise create a normal directory, in the same way as
\fId\fR\&.
.RE
.PP
\fIp\fR, \fIp+\fR
.RS 4
Create a named pipe (FIFO) if it does not exist yet\&. If suffixed with
\fI+\fR
and a file already exists where the pipe is to be created, it will be removed and be replaced by the pipe\&.
.RE
.PP
\fIL\fR, \fIL+\fR
.RS 4
Create a symlink if it does not exist yet\&. If suffixed with
\fI+\fR
and a file already exists where the symlink is to be created, it will be removed and be replaced by the symlink\&. If the argument is omitted, symlinks to files with the same name residing in the directory
/usr/share/factory/
are created\&.
.RE
.PP
\fIc\fR, \fIc+\fR
.RS 4
Create a character device node if it does not exist yet\&. If suffixed with
\fI+\fR
and a file already exists where the device node is to be created, it will be removed and be replaced by the device node\&. It is recommended to suffix this entry with an exclamation mark to only create static device nodes at boot, as udev will not manage static device nodes that are created at runtime\&.
.RE
.PP
\fIb\fR, \fIb+\fR
.RS 4
Create a block device node if it does not exist yet\&. If suffixed with
\fI+\fR
and a file already exists where the device node is to be created, it will be removed and be replaced by the device node\&. It is recommended to suffix this entry with an exclamation mark to only create static device nodes at boot, as udev will not manage static device nodes that are created at runtime\&.
.RE
.PP
\fIC\fR
.RS 4
Recursively copy a file or directory, if the destination files or directories do not exist yet\&. Note that this command will not descend into subdirectories if the destination directory already exists\&. Instead, the entire copy operation is skipped\&. If the argument is omitted, files from the source directory
/usr/share/factory/
with the same name are copied\&. Does not follow symlinks\&.
.RE
.PP
\fIx\fR
.RS 4
Ignore a path during cleaning\&. Use this type to exclude paths from clean\-up as controlled with the Age parameter\&. Note that lines of this type do not influence the effect of
\fIr\fR
or
\fIR\fR
lines\&. Lines of this type accept shell\-style globs in place of normal path names\&.
.RE
.PP
\fIX\fR
.RS 4
Ignore a path during cleaning\&. Use this type to exclude paths from clean\-up as controlled with the Age parameter\&. Unlike
\fIx\fR, this parameter will not exclude the content if path is a directory, but only directory itself\&. Note that lines of this type do not influence the effect of
\fIr\fR
or
\fIR\fR
lines\&. Lines of this type accept shell\-style globs in place of normal path names\&.
.RE
.PP
\fIr\fR
.RS 4
Remove a file or directory if it exists\&. This may not be used to remove non\-empty directories, use
\fIR\fR
for that\&. Lines of this type accept shell\-style globs in place of normal path names\&. Does not follow symlinks\&.
.RE
.PP
\fIR\fR
.RS 4
Recursively remove a path and all its subdirectories (if it is a directory)\&. Lines of this type accept shell\-style globs in place of normal path names\&. Does not follow symlinks\&.
.RE
.PP
\fIz\fR
.RS 4
Adjust the access mode, group and user, and restore the SELinux security context of a file or directory, if it exists\&. Lines of this type accept shell\-style globs in place of normal path names\&. Does not follow symlinks\&.
.RE
.PP
\fIZ\fR
.RS 4
Recursively set the access mode, group and user, and restore the SELinux security context of a file or directory if it exists, as well as of its subdirectories and the files contained therein (if applicable)\&. Lines of this type accept shell\-style globs in place of normal path names\&. Does not follow symlinks\&.
.RE
.PP
\fIt\fR
.RS 4
Set extended attributes\&. Lines of this type accept shell\-style globs in place of normal path names\&. This can be useful for setting SMACK labels\&. Does not follow symlinks\&.
.RE
.PP
\fIT\fR
.RS 4
Recursively set extended attributes\&. Lines of this type accept shell\-style globs in place of normal path names\&. This can be useful for setting SMACK labels\&. Does not follow symlinks\&.
.RE
.PP
\fIh\fR
.RS 4
Set file/directory attributes\&. Lines of this type accept shell\-style globs in place of normal path names\&.
.sp
The format of the argument field is
\fI[+\-=][aAcCdDeijsStTu] \fR\&. The prefix
\fI+\fR
(the default one) causes the attribute(s) to be added;
\fI\-\fR
causes the attribute(s) to be removed;
\fI=\fR
causes the attributes to set exactly as the following letters\&. The letters
"aAcCdDeijsStTu"
select the new attributes for the files, see
\fBchattr\fR(1)
for further information\&.
.sp
Passing only
\fI=\fR
as argument resets all the file attributes listed above\&. It has to be pointed out that the
\fI=\fR
prefix, limits itself to the attributes corresponding to the letters listed here\&. All other attributes will be left untouched\&. Does not follow symlinks\&.
.RE
.PP
\fIH\fR
.RS 4
Recursively set file/directory attributes\&. Lines of this type accept shell\-style globs in place of normal path names\&. Does not follow symlinks\&.
.RE
.PP
\fIa\fR, \fIa+\fR
.RS 4
Set POSIX ACLs (access control lists)\&. If suffixed with
\fI+\fR, specified entries will be added to the existing set\&.
\fBsystemd\-tmpfiles\fR
will automatically add the required base entries for user and group based on the access mode of the file, unless base entries already exist or are explictly specified\&. The mask will be added if not specified explicitly or already present\&. Lines of this type accept shell\-style globs in place of normal path names\&. This can be useful for allowing additional access to certain files\&. Does not follow symlinks\&.
.RE
.PP
\fIA\fR, \fIA+\fR
.RS 4
Same as
\fIa\fR
and
\fIa+\fR, but recursive\&. Does not follow symlinks\&.
.RE
.PP
If the exclamation mark is used, this line is only safe of execute during boot, and can break a running system\&. Lines without the exclamation mark are presumed to be safe to execute at any time, e\&.g\&. on package upgrades\&.
\fBsystemd\-tmpfiles\fR
will execute line with an exclamation mark only if option
\fB\-\-boot\fR
is given\&.
.PP
For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# Make sure these are created by default so that nobody else can
      d /tmp/\&.X11\-unix 1777 root root 10d

      # Unlink the X11 lock files
      r! /tmp/\&.X[0\-9]*\-lock
.fi
.if n \{\
.RE
.\}
.sp
The second line in contrast to the first one would break a running system, and will only be executed with
\fB\-\-boot\fR\&.
.SS "Path"
.PP
The file system path specification supports simple specifier expansion\&. The following expansions are understood:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \&Specifiers available
.TS
allbox tab(:);
lB lB lB.
T{
Specifier
T}:T{
Meaning
T}:T{
Details
T}
.T&
l l l
l l l
l l l
l l l
l l l.
T{
"%m"
T}:T{
Machine ID
T}:T{
The machine ID of the running system, formatted as string\&. See \fBmachine-id\fR(5) for more information\&.
T}
T{
"%b"
T}:T{
Boot ID
T}:T{
The boot ID of the running system, formatted as string\&. See \fBrandom\fR(4) for more information\&.
T}
T{
"%H"
T}:T{
Host name
T}:T{
The hostname of the running system\&.
T}
T{
"%v"
T}:T{
Kernel release
T}:T{
Identical to \fBuname \-r\fR output\&.
T}
T{
"%%"
T}:T{
Escaped %
T}:T{
Single percent sign\&.
T}
.TE
.sp 1
.SS "Mode"
.PP
The file access mode to use when creating this file or directory\&. If omitted or when set to
"\-", the default is used: 0755 for directories, 0644 for all other file objects\&. For
\fIz\fR,
\fIZ\fR
lines, if omitted or when set to
"\-", the file access mode will not be modified\&. This parameter is ignored for
\fIx\fR,
\fIr\fR,
\fIR\fR,
\fIL\fR,
\fIt\fR, and
\fIa\fR
lines\&.
.PP
Optionally, if prefixed with
"~", the access mode is masked based on the already set access bits for existing file or directories: if the existing file has all executable bits unset, all executable bits are removed from the new access mode, too\&. Similarly, if all read bits are removed from the old access mode, they will be removed from the new access mode too, and if all write bits are removed, they will be removed from the new access mode too\&. In addition, the sticky/SUID/SGID bit is removed unless applied to a directory\&. This functionality is particularly useful in conjunction with
\fIZ\fR\&.
.SS "UID, GID"
.PP
The user and group to use for this file or directory\&. This may either be a numeric user/group ID or a user or group name\&. If omitted or when set to
"\-", the default 0 (root) is used\&. For
\fIz\fR,
\fIZ\fR
lines, when omitted or when set to
"\-", the file ownership will not be modified\&. These parameters are ignored for
\fIx\fR,
\fIr\fR,
\fIR\fR,
\fIL\fR,
\fIt\fR, and
\fIa\fR
lines\&.
.SS "Age"
.PP
The date field, when set, is used to decide what files to delete when cleaning\&. If a file or directory is older than the current time minus the age field, it is deleted\&. The field format is a series of integers each followed by one of the following postfixes for the respective time units:
\fBs\fR,
\fBm\fR
or
\fBmin\fR,
\fBh\fR,
\fBd\fR,
\fBw\fR,
\fBms\fR,
\fBus\fR, respectively meaning seconds, minutes, hours, days, weeks, milliseconds, and microseconds\&. Full names of the time units can be used too\&.
.PP
If multiple integers and units are specified, the time values are summed\&. If an integer is given without a unit,
\fBs\fR
is assumed\&.
.PP
When the age is set to zero, the files are cleaned unconditionally\&.
.PP
The age field only applies to lines starting with
\fId\fR,
\fID\fR, and
\fIx\fR\&. If omitted or set to
"\-", no automatic clean\-up is done\&.
.PP
If the age field starts with a tilde character
"~", the clean\-up is only applied to files and directories one level inside the directory specified, but not the files and directories immediately inside it\&.
.SS "Argument"
.PP
For
\fIL\fR
lines determines the destination path of the symlink\&. For
\fIc\fR,
\fIb\fR
determines the major/minor of the device node, with major and minor formatted as integers, separated by
":", e\&.g\&.
"1:3"\&. For
\fIf\fR,
\fIF\fR, and
\fIw\fR
may be used to specify a short string that is written to the file, suffixed by a newline\&. For
\fIC\fR, specifies the source file or directory\&. For
\fIt\fR,
\fIT\fR
determines extended attributes to be set\&. For
\fIa\fR,
\fIA\fR
determines ACL attributes to be set\&. For
\fIh\fR,
\fIH\fR
determines the file attributes to set\&. Ignored for all other lines\&.
.SH "EXAMPLE"
.PP
\fBExample\ \&1.\ \&/etc/tmpfiles.d/screen.conf example\fR
.PP
\fBscreen\fR
needs two directories created at boot with specific modes and ownership\&.
.sp
.if n \{\
.RS 4
.\}
.nf
d /run/screens  1777 root root 10d
d /run/uscreens 0755 root root 10d12h
t /run/screen \- \- \- \- user\&.name="John Smith" security\&.SMACK64=screen
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&2.\ \&/etc/tmpfiles.d/abrt.conf example\fR
.PP
\fBabrt\fR
needs a directory created at boot with specific mode and ownership and its content should be preserved\&.
.sp
.if n \{\
.RS 4
.\}
.nf
d /var/tmp/abrt 0755 abrt abrt
x /var/tmp/abrt/*
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd-tmpfiles\fR(8),
\fBsystemd-delta\fR(1),
\fBsystemd.exec\fR(5),
\fBattr\fR(5),
\fBgetfattr\fR(1),
\fBsetfattr\fR(1),
\fBsetfacl\fR(1),
\fBgetfacl\fR(1),
\fBchattr\fR(1)
